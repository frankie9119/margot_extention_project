{"ast":null,"code":"var _jsxFileName = \"/Users/fc/Desktop/Openclassrooms/JavaScript/REACT/MARGOT 2/margot_second_project/src/ChanteuseComponent/PhotoGallery.js\";\nimport React from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { photos } from \"../img\";\n\nfunction PhotoGallery() {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n  const openLightbox = useCallback((event, {\n    photo,\n    index\n  }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Gallery, {\n    photos: photos,\n    onClick: openLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(ModalGateway, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, viewerIsOpen ? React.createElement(Modal, {\n    onClose: closeLightbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    currentIndex: currentImage,\n    views: photos.map(x => ({ ...x,\n      srcset: x.srcSet,\n      caption: x.title\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : null));\n}\n\nexport default PhotoGallery;","map":{"version":3,"sources":["/Users/fc/Desktop/Openclassrooms/JavaScript/REACT/MARGOT 2/margot_second_project/src/ChanteuseComponent/PhotoGallery.js"],"names":["React","Gallery","Carousel","Modal","ModalGateway","photos","PhotoGallery","currentImage","setCurrentImage","useState","viewerIsOpen","setViewerIsOpen","openLightbox","useCallback","event","photo","index","closeLightbox","map","x","srcset","srcSet","caption","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,IAAmBC,KAAnB,EAA0BC,YAA1B,QAA8C,cAA9C;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCF,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMG,YAAY,GAAGC,WAAW,CAAC,CAACC,KAAD,EAAQ;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAR,KAA6B;AAC5DR,IAAAA,eAAe,CAACQ,KAAD,CAAf;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAH+B,EAG7B,EAH6B,CAAhC;;AAKA,QAAMM,aAAa,GAAG,MAAM;AAC1BT,IAAAA,eAAe,CAAC,CAAD,CAAf;AACAG,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEN,MAAjB;AAAyB,IAAA,OAAO,EAAEO,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YAAY,GACX,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEO,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,YAAY,EAAEV,YADhB;AAEE,IAAA,KAAK,EAAEF,MAAM,CAACa,GAAP,CAAWC,CAAC,KAAK,EACtB,GAAGA,CADmB;AAEtBC,MAAAA,MAAM,EAAED,CAAC,CAACE,MAFY;AAGtBC,MAAAA,OAAO,EAAEH,CAAC,CAACI;AAHW,KAAL,CAAZ,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADW,GAWT,IAZN,CAFF,CADF;AAmBD;;AACD,eAAejB,YAAf","sourcesContent":["import React from \"react\";\n\nimport Gallery from \"react-photo-gallery\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\nimport { photos } from \"../img\";\n\nfunction PhotoGallery() {\n  const [currentImage, setCurrentImage] = useState(0);\n  const [viewerIsOpen, setViewerIsOpen] = useState(false);\n\n  const openLightbox = useCallback((event, { photo, index }) => {\n    setCurrentImage(index);\n    setViewerIsOpen(true);\n  }, []);\n\n  const closeLightbox = () => {\n    setCurrentImage(0);\n    setViewerIsOpen(false);\n  };\n\n  return (\n    <div>\n      <Gallery photos={photos} onClick={openLightbox} />\n      <ModalGateway>\n        {viewerIsOpen ? (\n          <Modal onClose={closeLightbox}>\n            <Carousel\n              currentIndex={currentImage}\n              views={photos.map(x => ({\n                ...x,\n                srcset: x.srcSet,\n                caption: x.title\n              }))}\n            />\n          </Modal>\n        ) : null}\n      </ModalGateway>\n    </div>\n  );\n}\nexport default PhotoGallery\n"]},"metadata":{},"sourceType":"module"}