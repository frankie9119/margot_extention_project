{"ast":null,"code":"var _jsxFileName = \"/Users/fc/Desktop/Openclassrooms/JavaScript/REACT/MARGOT 2/margot_second_project/src/ContactForm/ContactForm.js\";\nimport React from 'react';\nimport * as emailjs from 'emailjs-com';\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap';\nimport SimpleReactValidator from 'simple-react-validator';\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n\n    this.handleChange = (param, e) => {\n      this.setState({\n        [param]: e.target.value\n      });\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      subject,\n      message\n    } = this.state;\n    let templateParams = {\n      from_name: email,\n      to_name: 'fran001.test001@gmail.com',\n      subject: subject,\n      message_html: message\n    };\n    emailjs.send('gmail', 'template_hEmmNklR', templateParams, 'user_Blhjol4eDObs7zbNluxq3');\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    });\n  }\n\n  submitForm() {\n    if (this.validator.allValid()) {\n      alert('You submitted the form and stuff!');\n    } else {\n      this.validator.showMessages(); // rerender to show messages for the first time\n      // you can use the autoForceUpdate option to do this automatically`\n\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Write a Review\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.title,\n      onChange: this.handleChange.bind(this, 'name'),\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.validator.message('title', this.state.title, 'required|alpha')), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.handleChange.bind(this, 'email'),\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.validator.message('email', this.state.email, 'required|email', 'text-danger')), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Review\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      value: this.state.review,\n      onChange: this.handleChange.bind(this, 'message'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), this.validator.message('title', this.state.title, 'required|alpha')), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Save Review\"));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/fc/Desktop/Openclassrooms/JavaScript/REACT/MARGOT 2/margot_second_project/src/ContactForm/ContactForm.js"],"names":["React","emailjs","Button","FormFeedback","Form","FormGroup","Label","Input","SimpleReactValidator","ContactForm","Component","state","name","email","subject","message","handleChange","param","e","setState","target","value","handleSubmit","preventDefault","templateParams","from_name","to_name","message_html","send","resetForm","submitForm","validator","allValid","alert","showMessages","forceUpdate","render","title","bind","review"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AAEA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgDC,KAAhD,EAAuDC,KAAvD,QAAoE,YAApE;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACLC,MAAAA,IAAI,EAAE,EADD;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,OAAO,EAAE,EAHJ;AAILC,MAAAA,OAAO,EAAE;AAJJ,KADiC;;AAAA,SAgC1CC,YAhC0C,GAgC3B,CAACC,KAAD,EAAQC,CAAR,KAAc;AACzB,WAAKC,QAAL,CAAc;AAAE,SAACF,KAAD,GAASC,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd;AACD,KAlCuC;AAAA;;AAO1CC,EAAAA,YAAY,CAACJ,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAM;AAAEX,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,OAAf;AAAwBC,MAAAA;AAAxB,QAAoC,KAAKJ,KAA/C;AACA,QAAIa,cAAc,GAAG;AACnBC,MAAAA,SAAS,EAAEZ,KADQ;AAEnBa,MAAAA,OAAO,EAAE,2BAFU;AAGnBZ,MAAAA,OAAO,EAAEA,OAHU;AAInBa,MAAAA,YAAY,EAAEZ;AAJK,KAArB;AAMCd,IAAAA,OAAO,CAAC2B,IAAR,CACC,OADD,EAEC,mBAFD,EAGEJ,cAHF,EAIC,4BAJD;AAMA,SAAKK,SAAL;AACH;;AACFA,EAAAA,SAAS,GAAG;AACR,SAAKV,QAAL,CAAc;AACZP,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,KAAK,EAAE,EAFK;AAGZC,MAAAA,OAAO,EAAE,EAHG;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAAd;AAMD;;AAMHe,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKC,SAAL,CAAeC,QAAf,EAAJ,EAA+B;AAC7BC,MAAAA,KAAK,CAAC,mCAAD,CAAL;AACD,KAFD,MAEO;AACL,WAAKF,SAAL,CAAeG,YAAf,GADK,CAEL;AACA;;AACA,WAAKC,WAAL;AACD;AACF;;AAEAC,EAAAA,MAAM,GAAG;AACR,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW0B,KAAlD;AAAyD,MAAA,QAAQ,EAAE,KAAKrB,YAAL,CAAkBsB,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,CAAnE;AACQ,MAAA,WAAW,EAAC,MADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAMG,KAAKP,SAAL,CAAehB,OAAf,CAAuB,OAAvB,EAAgC,KAAKJ,KAAL,CAAW0B,KAA3C,EAAkD,gBAAlD,CANH,CAFF,EAWE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAgC,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWE,KAAlD;AAAyD,MAAA,QAAQ,EAAE,KAAKG,YAAL,CAAkBsB,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAAnE;AACQ,MAAA,WAAW,EAAC,aADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAMG,KAAKP,SAAL,CAAehB,OAAf,CAAuB,OAAvB,EAAgC,KAAKJ,KAAL,CAAWE,KAA3C,EAAkD,gBAAlD,EAAoE,aAApE,CANH,CAXF,EAoBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAU,MAAA,SAAS,EAAC,cAApB;AAAmC,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAW4B,MAArD;AAA6D,MAAA,QAAQ,EAAE,KAAKvB,YAAL,CAAkBsB,IAAlB,CAAuB,IAAvB,EAA6B,SAA7B,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKG,KAAKP,SAAL,CAAehB,OAAf,CAAuB,OAAvB,EAAgC,KAAKJ,KAAL,CAAW0B,KAA3C,EAAkD,gBAAlD,CALH,CApBF,EA4BE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKP,UAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA5BF,CADF;AAgCD;;AAjFyC;;AAoF1C,eAAerB,WAAf","sourcesContent":["import React from 'react';\nimport * as emailjs from 'emailjs-com';\n\nimport { Button, FormFeedback, Form, FormGroup, Label, Input } from 'reactstrap';\n\nimport SimpleReactValidator from 'simple-react-validator';\n\nclass ContactForm extends React.Component {\n state = {\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n  }\nhandleSubmit(e) {\n    e.preventDefault()\n    const { name, email, subject, message } = this.state\n    let templateParams = {\n      from_name: email,\n      to_name: 'fran001.test001@gmail.com',\n      subject: subject,\n      message_html: message,\n     }\n     emailjs.send(\n      'gmail',\n      'template_hEmmNklR',\n       templateParams,\n      'user_Blhjol4eDObs7zbNluxq3'\n     )\n     this.resetForm()\n }\nresetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      subject: '',\n      message: '',\n    })\n  }\nhandleChange = (param, e) => {\n    this.setState({ [param]: e.target.value })\n  }\n  \n\nsubmitForm() {\n  if (this.validator.allValid()) {\n    alert('You submitted the form and stuff!');\n  } else {\n    this.validator.showMessages();\n    // rerender to show messages for the first time\n    // you can use the autoForceUpdate option to do this automatically`\n    this.forceUpdate();\n  }\n}\n\n render() {\n  return (\n    <div className=\"container\">\n      <h1>Write a Review</h1>\n      <div className=\"form-group\">\n        <label>Title</label>\n        <input className=\"form-control\" value={this.state.title} onChange={this.handleChange.bind(this, 'name')}\n                placeholder=\"Name\" />\n\n        {/**********   This is where the magic happens     ***********/}\n        {this.validator.message('title', this.state.title, 'required|alpha')}\n\n      </div>\n      <div className=\"form-group\">\n        <label>Email</label>\n        <input className=\"form-control\" value={this.state.email} onChange={this.handleChange.bind(this, 'email')}\n                placeholder=\"Enter email\" />\n\n        {/**********   This is where the magic happens     ***********/}\n        {this.validator.message('email', this.state.email, 'required|email', 'text-danger')}\n\n      </div>\n      <div className=\"form-group\">\n        <label>Review</label>\n        <textarea className=\"form-control\" value={this.state.review} onChange={this.handleChange.bind(this, 'message')} />\n\n        {/**********   This is where the magic happens     ***********/}\n        {this.validator.message('title', this.state.title, 'required|alpha')}\n\n      </div>\n      <button className=\"btn btn-primary\" onClick={this.submitForm}>Save Review</button>\n    </div>\n  );\n}\n}\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}